[
  {
    "objectID": "TidyTuesday/2025-7-8_xkcd_colors/index.html",
    "href": "TidyTuesday/2025-7-8_xkcd_colors/index.html",
    "title": "xkcd Color Survey",
    "section": "",
    "text": "TidyTuesday work for 7/8/25\nThe xKCD color survey asked people to name the colors that popped up on their screens.\nAcquire data\n\n\nCode\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(plotly)\n\n\ntuesdata &lt;- tidytuesdayR::tt_load('2025-07-08')\nanswers &lt;- tuesdata$answers\ncolor_ranks &lt;- tuesdata$color_ranks\nusers &lt;- tuesdata$users\n\n\nReds ranked by red value in RGB\n\n\nCode\nrgb_matrix &lt;- col2rgb(color_ranks$hex)\nrgb_df &lt;- as.data.frame(t(rgb_matrix))\nred &lt;- rgb_df %&gt;% \n  mutate(rank = row_number()) %&gt;% \n  right_join(color_ranks, join_by(rank)) %&gt;% \n  filter(str_detect(color, \"red$\")) %&gt;% \n  arrange(red, green, blue) %&gt;% \n  mutate(row = row_number(), graphcolor = \"red\")\n\nred %&gt;% \n  ggplot(aes(x = row, y = graphcolor, label = color, fill = hex)) +\n  geom_tile()+\n  scale_fill_identity()+\n  geom_text(color = \"black\")+\n  coord_flip()\n\n\n\n\n\n\n\n\n\nColors Based on the 2010 xkcd Color Name Survey, this graph shows colors that participants named using a descriptive version of the 11 basic color terms in English example ‘dark red’ is a red, ‘reddish orange’ is orange and ‘yellowgreen’ is green\n\n\nCode\nrgb_matrix &lt;- col2rgb(color_ranks$hex)\nrgb_df &lt;- as.data.frame(t(rgb_matrix)) %&gt;% mutate(rank = row_number())\ncolors_named &lt;- color_ranks %&gt;% \n  left_join(rgb_df, join_by(rank)) %&gt;% \n  mutate(rainbow = case_when(\n    str_detect(color,\"red$\") ~ \"red\", \n    str_detect(color,\"orange$\") ~ \"orange\",\n    str_detect(color,\"yellow$\") ~ \"yellow\",\n    str_detect(color,\"green$\") ~ \"green\",\n    str_detect(color,\"blue$\") ~ \"blue\",\n    str_detect(color,\"purple$\") ~ \"purple\",\n    str_detect(color,\"pink$\") ~ \"pink\",\n    str_detect(color,\"brown$\") ~ \"brown\", \n    str_detect(color,\"black$\") ~ \"black\",\n    str_detect(color,\"grey$\") ~ \"grey\",\n    str_detect(color,\"black$\") ~ \"black\",\n    str_detect(color,\"white$\") ~ \"white\",\n    TRUE ~ \"other\"\n  )) %&gt;% \n  mutate(category = case_when(rainbow == \"red\" ~ 1,\n                              rainbow == \"orange\" ~ 2, \n                              rainbow == \"yellow\" ~ 3, \n                              rainbow == \"green\" ~ 4, \n                              rainbow == \"blue\" ~ 5, \n                              rainbow == \"purple\" ~ 6, \n                              rainbow == \"pink\" ~ 7, \n                              rainbow == \"brown\" ~ 8, \n                              rainbow == \"grey\" ~ 9, \n                              rainbow == \"black\" ~ 10,\n                              rainbow == \"white\" ~ 11)) %&gt;% \n  arrange(red, green, blue) %&gt;% \n  group_by(rainbow) %&gt;% \n  mutate(row = row_number())\n\np &lt;- colors_named %&gt;% \n  ggplot(aes(\n    x = row, \n    y = reorder(rainbow, category), \n    text = paste0(\"&lt;b&gt;Color:&lt;/b&gt; \", color, \"&lt;br&gt;\", \"&lt;bHex:&lt;/b&gt; \", hex), \n    label = color, fill = hex))+\n  geom_tile()+\n  scale_fill_identity()+\n  coord_flip()+\n  labs(title = \" Named colors using the 11 basic color terms\", \n       subtitle = \"Based on the 2010 xkcd Color Name Survey, this graph shows colors that participants named using a descriptive version of the 11 basic color terms in English \\nFor example 'dark red' is a red, 'reddish orange' is orange and 'yellowgreen' is green,\", \n       caption = \"TidyTuesday July 8, 2025 \\nData Source: xkcd Color Survey\", \n       y = \"Basic Color Term\", \n       x = \"\")+\n  theme(panel.background = element_rect(fill = \"#fefdf8\"), legend.position = \"none\")\n\nggplotly(p, tooltip = \"text\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nelly Tkachman",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "tidytuesday.html",
    "href": "tidytuesday.html",
    "title": "tidytuesday",
    "section": "",
    "text": "British Library Funding\n\n\n\n\n\n\nNelly Tkachman\n\n\nJul 15, 2025\n\n\n\n\n\n\n\n\n\n\n\nxkcd Color Survey\n\n\n\n\n\n\nNelly Tkachman\n\n\nJul 8, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "TidyTuesday/2025-7-15_bl_funding/index.html",
    "href": "TidyTuesday/2025-7-15_bl_funding/index.html",
    "title": "British Library Funding",
    "section": "",
    "text": "British Library Funding from 1998 to 2023 Looking at the funding and the funding adjusted for inflation\nAcquire date\n\n\nCode\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\n\ntuesdata &lt;- tidytuesdayR::tt_load('2025-07-15')\nbl_funding &lt;- tuesdata$bl_funding\n\n\n\nSimple look at funding overtime\nRed is nominal funding\nBlue line is funding adjusted in 2025\nGreen line is adjusted funding that was done in 2016, based on an older inflation adjustment calculator\n\n\n\nCode\nbl_funding %&gt;% \n  ggplot() +\n  geom_line(aes(x = year, y = nominal_gbp_millions), color = \"red\")+\n  geom_line(aes(x = year, y = total_y2000_gbp_millions), color = \"blue\")+\n  geom_line(aes(x = year, y = year_2000_gbp_millions), color = \"green\")\n\n\n\n\n\n\n\n\n\nHow much of funding is from grant-in-aid\n\n\nCode\nbl_funding %&gt;% \n  ggplot()+\n  geom_bar(aes(x = year, y = nominal_gbp_millions), stat = \"identity\", fill = \"red\")+\n  geom_bar(aes(x = year, y = gia_gbp_millions), stat = \"identity\", fill = \"blue\")\n\n\n\n\n\n\n\n\n\nBritish Library funding break down\n\ngia - grant-in-aid funding (core funding from UK government)\nservices - funding from service delivery within the remit of being a charity\nvoluntary - funding covering all voluntary contributions and donations, including the valuation of donated collection items\ninvestment - funding from returns on savings and investments\nother - anything that doesn’t fit above\n\n\n\nCode\nbl_funding_pivoted &lt;- bl_funding %&gt;% \n  pivot_longer(cols = 2:17, names_to = \"value\", values_to = \"quantity\") %&gt;% \n  mutate(source = case_when(\n    value == \"nominal_gbp_millions\" ~ \"total_reported_funding\", \n    value == \"gia_gbp_millions\" ~ \"reported_funding\", \n    value == \"voluntary_gbp_millions\" ~ \"reported_funding\", \n    value == \"investment_gbp_millions\" ~ \"reported_funding\", \n    value == \"services_gbp_millions\" ~ \"reported_funding\", \n    value == \"other_gbp_millions\" ~ \"reported_funding\", \n    value == \"year_2000_gbp_millions\" ~ \"2016_adjusted_funding\", \n    value == \"total_y2000_gbp_millions\" ~ \"total_adjusted_funding\",\n    value == \"gia_y2000_gbp_millions\" ~ \"adjusted_funding\", \n    value == \"voluntary_y2000_gbp_millions\" ~ \"adjusted_funding\",\n    value == \"investment_y2000_gbp_millions\" ~ \"adjusted_funding\",\n    value == \"services_y2000_gbp_millions\" ~ \"adjusted_funding\", \n    value == \"other_y2000_gbp_millions\" ~ \"adjusted_funding\", \n    value == \"inflation_adjustment\" ~ \"inflation_adjustment\",\n    value == \"percentage_of_y2000_income\" ~ \"percentage_of_y2000_income\",\n    value == \"gia_as_percent_of_peak_gia\" ~ \"gia_as_percent_of_peak_gia\"\n  ))\n\nbl_funding_pivoted %&gt;% \n  filter(source == \"reported_funding\") %&gt;% \n  ggplot(aes(x = year, y = quantity, fill = fct_reorder(value, quantity)))+ \n  geom_area()+\n  labs(title = \"British Library funding streams 1998 - 2023 (not inflation adjusted)\")+\n  ylab(\"GBP in millions\")\n\n\n\n\n\n\n\n\n\nCode\nbl_funding_pivoted %&gt;% \n  filter(source == \"adjusted_funding\") %&gt;% \n  ggplot(aes(x = year, y = quantity, fill = fct_reorder(value, quantity)))+ \n  geom_area()+\n  labs(title = \"British Library funding streams 1998 - 2023 (inflation adjusted)\")+\n  ylab(\"GBP in y2000 millions\")"
  }
]